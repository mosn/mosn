// Code generated by MockGen. DO NOT EDIT.
// Source: ../stagemanager/stage_manager.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v2 "mosn.io/mosn/pkg/config/v2"
)

// MockMosn is a mock of Mosn interface.
type MockMosn struct {
	ctrl     *gomock.Controller
	recorder *MockMosnMockRecorder
}

// MockMosnMockRecorder is the mock recorder for MockMosn.
type MockMosnMockRecorder struct {
	mock *MockMosn
}

// NewMockMosn creates a new mock instance.
func NewMockMosn(ctrl *gomock.Controller) *MockMosn {
	mock := &MockMosn{ctrl: ctrl}
	mock.recorder = &MockMosnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMosn) EXPECT() *MockMosnMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockMosn) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockMosnMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockMosn)(nil).Close))
}

// InheritConfig mocks base method.
func (m *MockMosn) InheritConfig(arg0 *v2.MOSNConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InheritConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// InheritConfig indicates an expected call of InheritConfig.
func (mr *MockMosnMockRecorder) InheritConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InheritConfig", reflect.TypeOf((*MockMosn)(nil).InheritConfig), arg0)
}

// InheritConnections mocks base method.
func (m *MockMosn) InheritConnections() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InheritConnections")
	ret0, _ := ret[0].(error)
	return ret0
}

// InheritConnections indicates an expected call of InheritConnections.
func (mr *MockMosnMockRecorder) InheritConnections() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InheritConnections", reflect.TypeOf((*MockMosn)(nil).InheritConnections))
}

// InitMosn mocks base method.
func (m *MockMosn) InitMosn() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitMosn")
}

// InitMosn indicates an expected call of InitMosn.
func (mr *MockMosnMockRecorder) InitMosn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitMosn", reflect.TypeOf((*MockMosn)(nil).InitMosn))
}

// Start mocks base method.
func (m *MockMosn) Start() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start")
}

// Start indicates an expected call of Start.
func (mr *MockMosnMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockMosn)(nil).Start))
}
