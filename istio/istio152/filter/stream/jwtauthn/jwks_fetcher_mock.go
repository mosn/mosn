// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/filter/stream/jwtauthn/jwks_fetcher.go

// Package jwtauthn is a generated GoMock package.
package jwtauthn

import (
	reflect "reflect"

	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	gomock "github.com/golang/mock/gomock"
	jwk "github.com/lestrrat/go-jwx/jwk"
)

// MockJwksFetcher is a mock of JwksFetcher interface
type MockJwksFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockJwksFetcherMockRecorder
}

// MockJwksFetcherMockRecorder is the mock recorder for MockJwksFetcher
type MockJwksFetcherMockRecorder struct {
	mock *MockJwksFetcher
}

// NewMockJwksFetcher creates a new mock instance
func NewMockJwksFetcher(ctrl *gomock.Controller) *MockJwksFetcher {
	mock := &MockJwksFetcher{ctrl: ctrl}
	mock.recorder = &MockJwksFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJwksFetcher) EXPECT() *MockJwksFetcherMockRecorder {
	return m.recorder
}

// Fetch mocks base method
func (m *MockJwksFetcher) Fetch(uri *v3.HttpUri) (*jwk.Set, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", uri)
	ret0, _ := ret[0].(*jwk.Set)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch
func (mr *MockJwksFetcherMockRecorder) Fetch(uri interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockJwksFetcher)(nil).Fetch), uri)
}
